# NSO-cicd-automated testing
# Author: @daquezad
#
# Pipeline definition for gitlab-runner
#

include:
  - '/pipeline_utils/environments.yml'

stages:
  - build
  - test
  - deliver
  - cleanup
  - deploy_prod

variables:
# TODO: Pre-load variables into gitlab 
    NSO_TESTING_URL:  "http://10.10.20.47:8080/"
    NSO_DEVELOPMENT_URL:  "http://10.10.20.47:8080/"
    NSO_PRODUCTION_URL: "http://10.10.20.47:8080/"
    NSO_DEV_PWD: "C1sco12345"
    NSO_DEV_USER: "developer"
    NSO_DEV_IP: "10.10.20.47"

# Install any required python packages needed for the scripts
before_script:
  - pip install requests
  - ansible-galaxy collection install cisco.nso
  - 'which sshpass || ( apt-get update -y && apt-get install sshpass -y )'
  - 'which scp || ( apt-get update -y && apt-get install openssh-client -y )'
  - 'which lftp || ( apt-get update -y && apt-get install lftp -y )'

packages-staging:
  stage: build
  when: on_success
  except:
    - main
  script:
  # TODO: validate scp command and compiling package
    - echo "(Build üèóÔ∏è) Loading and compiling packages in the NSO dev container"
    # - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "echo 'saludos'"
    # - sshpass -p "C1sco12345" /usr/bin/scp -o StrictHostKeyChecking=no -r packages/loopback developer@10.10.20.47:/home/developer/loopback


package-load:
  stage: build
  when: on_success
  except:
    - main
  script:
    - echo "(Build üèóÔ∏è) Loading compiled packages to testing env NSO"
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "source /opt/ncs/ncs-6.2.5/ncsrc && echo 'packages reload' | ncs_cli -Cu admin"


loopback-implementation-service:
  stage: test
  when: on_success
  except:
    - main
  script:
    - echo "(Test ü§ñ) Deploying service in the NSO test env"
    # TODO: validate running test in NSO test env fro pipeline
    # - cd tests/loopback-test && python3 loopback-test.py --nso_url $NSO_TESTING_URL --device "core-rtr01"



release-publishing-üì¶:
  stage: deliver
  when: on_success
  except:
    - main
  script:
    - echo "(Deliver üì¶) Generating zip"
# TODO: Validate ziping package
  #   - sshpass -p "C1sco12345" /usr/bin/scp -o StrictHostKeyChecking=no -r $NSO_DEV_USER@$NSO_DEV_IP:/nso/run/packages/$PACKAGE ../package-artifact/
  #   - cd ../package-artifact/ && ls
  #   - tar -czvf nso-packages_$CI_COMMIT_REF_NAME.tar.gz .
  # artifacts:
  #   when: on_success
  #   paths:
  #    - $CI_PROJECT_DIR/package-artifact/nso-packages_$CI_COMMIT_REF_NAME.tar.gz

cleanup-üóëÔ∏è:
  stage: cleanup
  when: always
  allow_failure: true
  script:
    - echo "(Cleanup üóëÔ∏è) Removing files from NSO Dev"
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "rm -r packages"

deploy-production-üì¨:
  stage: deploy_prod
  when: on_success
  only:
    - main
  script:
    - echo "(Deployüì¨) Deployment in production."
    # TODO: Validate scp command and loading package in prod env
#     - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "cd /home/developer/packages && tar -xvf nso-packages_$CI_COMMIT_REF_NAME.tar.gz"
#     - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "cd /home/developer/packages && rm -rf *.tar.gz"
#     - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "cd /home/developer/packages && cp -a . /nso/run/packages"
#     - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "source /opt/ncs/ncs-6.2.5/ncsrc && echo 'packages reload' | ncs_cli -Cu admin"
