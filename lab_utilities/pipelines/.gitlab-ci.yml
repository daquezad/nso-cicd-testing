# NSO-cicd-automated testing
# Author: @daquezad
#
# Pipeline definition for gitlab-runner
#
# This pipeline defined gives a practical example of the steps and workflow for updating, testing, and deploying an NSO service package.

include:
  - '/pipeline_utils/environments.yml' 

stages:
  - build 
  - test 
  - deliver
  - cleanup
  - deploy_prod

variables:
    NSO_TESTING_URL:  "http://10.10.20.47:8080/jsonrpc"
    NSO_DEVELOPMENT_URL:  "http://10.10.20.47:8080/jsonrpc"
    NSO_PRODUCTION_URL: "http://10.10.20.47:8080/jsonrpc"

# Install any required python packages needed for the scripts
before_script:
  - pip install requests
  - ansible-galaxy collection install cisco.nso

packages-staging:
  stage: build 
  # The except clause exempts the build stage from being run when changes committed to master
  except:
    - main
  script:
    - echo "(Build 🏗️) Loading and compiling packages in the NSO dev container"


package-load:
  stage: build
  when: on_success
  except:
    - main
  script:
    - echo "(Build 🏗️) Loading compiled packages to testing env NSO"


loopback-implementation-service:
  stage: test
  when: on_success
  except:
    - main
  script:
  script:
    - echo "(Test 🤖) Executing test for loopback-interface"

release-publishing-📦:
  stage: deliver
  when: on_success
  except:
    - main
  script:
    - echo "(Deliver 📦) Generating zip"

  # artifacts:
  #   when: on_success
  #   paths:
  #    - $CI_PROJECT_DIR/package-artifact/nso-packages_$CI_COMMIT_REF_NAME.tar.gz


